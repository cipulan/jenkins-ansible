---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Enable and start Docker service 
    service:
      name: docker 
      enabled: yes 
      state: started

  # Jenkins 

  - name: Add an apt signing key for Jenkins
    apt_key:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
      state: present

  - name: Add Jenkins apt repo
    apt_repository:
      repo: deb https://pkg.jenkins.io/debian-stable binary/
      state: present
      filename: jenkins
      update_cache: yes


  - name: Install JRE 
    apt:
      name: openjdk-8-jre
      state: present 

  - name: Install Jenkins 
    apt:
      name: jenkins
      state: present 

  - name: Add jenkins user to docker group
    user:
      name: jenkins
      group: docker

  - name: Enable and start jenkins service 
    service:
      name: jenkins 
      enabled: yes 
      state: started

  - name: Wait for Jenkins to start up before proceeding.
    uri:
      url: "http://localhost:8080"
      method: GET
      return_content: "yes"
      timeout: 5
      body_format: raw
      follow_redirects: "no"
      status_code: 200,403
    register: result
    until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
    retries: 60
    delay: 5
    changed_when: false
    check_mode: false

  - name: Get initial Jenkins password
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: jenkins_password

  - name: Print initial Jenkins password
    debug:
      var: jenkins_password.stdout

